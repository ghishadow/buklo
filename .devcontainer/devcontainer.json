
{
	"name": "Buklo",
	"build": {
		"dockerfile": "Dockerfile",
		"args": {
			// Use the VARIANT arg to pick a Debian OS version: buster, bullseye
			// Use bullseye when on local on arm64/Apple Silicon.
			"VARIANT": "edge"
		}
	},
	"containerEnv": {
		// static linking
		"LIBGIT2_STATIC": "1",
		"LIBSSH2_STATIC": "1",
		"LIBZ_SYS_STATIC": "1",
		"OPENSSL_STATIC": "1",
		"PKG_CONFIG_ALL_STATIC": "1"
	},
	"runArgs": [
		"--init",
		"--cap-add=SYS_PTRACE",
		"--security-opt",
		"seccomp=unconfined",
		"--userns=keep-id"
	],

	// Set *default* container specific settings.json values on container create.
	"settings": {
		"lldb.executable": "/usr/bin/lldb",
		// VS Code don't watch files under ./target
		"files.watcherExclude": {
			"**/target/**": true
		},
		"rust-analyzer.checkOnSave.command": "clippy"
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"vadimcn.vscode-lldb",
		"mutantdino.resourcemonitor",
		"matklad.rust-analyzer",
		"tamasfe.even-better-toml",
		"serayuzgur.crates",
		"mkhl.direnv",
		"rust-lang.rust-analyzer",
		"bungcip.better-toml",
		"kamadorueda.alejandra",
		"arrterian.nix-env-selector",
		"jnoortheen.nix-ide",
		"jamesottaway.nix-develop",
		"EditorConfig.EditorConfig",
		"esbenp.prettier-vscode",
		"redhat.vscode-yaml",
		"ms-azuretools.vscode-docker",
		"usernamehw.errorlens",
		"mhutchie.git-graph",
		"oderwat.indent-rainbow",
		"ms-vscode.makefile-tools",
		"DavidAnson.vscode-markdownlint",
		"eamodio.gitlens"
	],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "rustc --version",

	// Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
		"workspaceMount": "source=${localWorkspaceFolder},target=/workspace,type=bind,Z",
	"workspaceFolder": "/workspace",
	"containerUser": "vscode"
	// "features": {
	// 	"git": "os-provided",
	// 	"git-lfs": "latest",
	// 	"github-cli": "latest",
	// 	"sshd": "latest"
	// }
}
